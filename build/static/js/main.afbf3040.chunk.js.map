{"version":3,"sources":["services/logService.js","services/httpService.js","services/movieService.js","services/genreService.js","components/common/like.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","services/authService.js","components/moviesTable.jsx","components/common/pagination.jsx","components/common/listGroup.jsx","components/common/searchBox.jsx","components/movies.jsx","utils/paginate.js","components/customers.jsx","components/notFound.jsx","components/rentals.jsx","components/navBar.jsx","components/common/input.jsx","components/common/select.jsx","components/common/form.jsx","components/movieForm.jsx","components/loginForm.jsx","services/userService.js","components/registerForm.jsx","components/common/protectedRoutes.jsx","components/logout.jsx","App.js","serviceWorker.js","index.js"],"names":["logService","init","log","error","console","axios","defaults","baseURL","process","interceptors","response","use","status","logger","toast","Promise","reject","httpService","get","post","put","delete","setJwt","jwt","headers","common","apiEndPoint","movieUrl","id","concat","getMovie","movieId","http","saveMovie","movie","_id","body","Object","objectSpread","getGenres","Like","_ref","liked","onClick","classes","react_default","a","createElement","className","aria-hidden","style","cursor","TableHeader","raiseSort","path","sortColumn","_this","props","order","onSort","renderSortIcon","column","_this2","this","columns","map","key","label","Component","TableBody","renderCell","item","content","_","createKey","_this$props","data","Table","tableHeader","tableBody","tokenKey","_callee","email","password","regenerator_default","wrap","_context","prev","next","sent","localStorage","setItem","stop","getJwt","getItem","authService","login","_x","_x2","_login","apply","arguments","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","ex","MoviesTable","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Link","to","title","like","onLike","deleteColumn","onDelete","user","auth","isAdmin","push","movies","table","Pagination","itemsCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","range","page","ListGroup","items","textProperty","valueProperty","selectedItem","onItemSelect","defaultProps","SearchBox","value","onChange","type","name","placeholder","e","currentTarget","Movies","state","generes","searchQuery","selectedGenre","handleDelete","originalMovies","filter","m","setState","t0","handleLike","toConsumableArray","index","indexOf","handlePageChange","handleGeneresSelect","genre","handleSearch","query","handleSort","getPageData","_this$state","allMovies","filtered","toLowerCase","startsWith","pageNumber","startIndex","slice","take","paginate","orderBy","totalCount","length","_this$state2","_this$getPageData","listGroup","marginBottom","searchBox","moviesTable","pagination","Customers","NotFound","Rentals","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","Input","rest","objectWithoutProperties","htmlFor","assign","Select","options","option","Form","errors","validate","Joi","schema","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","details","Symbol","iterator","done","message","err","return","validateProperty","obj","defineProperty","handleSubmit","preventDefault","doSubmit","handleChange","_ref2","input","errorMessage","renderButton","disabled","renderInput","common_input","renderSelect","common_select","MovieForm","genreId","numberInStock","dailyRentalRate","genres","string","required","number","min","max","history","match","params","mapToViewModel","_context3","replace","populateGenres","populateMovie","onSubmit","LoginForm","username","_this$state$data","location","window","from","pathname","Redirect","RegisterForm","res","ProtectedRoutes","component","render","Route","Logout","App","lib","navBar","Switch","protectedRoutes","components_movies","exact","Boolean","hostname","REACT_APP_NAME","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.afbf3040.chunk.js","sourcesContent":["function init() {\r\n  // Sentry.init({\r\n  //   dsn: \"https://edee3e9f6eb544e2bd666c13270c7641@sentry.io/1782619\"\r\n  // });\r\n}\r\n\r\nfunction log(error) {\r\n  console.error(error);\r\n  // Sentry.captureException(error);\r\n}\r\n\r\nexport default {\r\n  init,\r\n  log\r\n};\r\n","import { toast } from \"react-toastify\";\r\nimport logger from \"./logService\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  if (!expectedError) {\r\n    logger.log(error);\r\n    toast.error('\"An unexpected Error occur\"');\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"/movies\";\r\n\r\nfunction movieUrl(id) {\r\n  return `${apiEndPoint}/${id}`;\r\n}\r\n\r\nexport function getMovies() {\r\n  return http.get(apiEndPoint);\r\n}\r\n\r\nexport function getMovie(movieId) {\r\n  return http.get(movieUrl(movieId));\r\n}\r\n\r\nexport function saveMovie(movie) {\r\n  if (movie._id) {\r\n    const body = { ...movie };\r\n    delete body._id;\r\n    return http.put(movieUrl(movie._id), body);\r\n  }\r\n  return http.post(apiEndPoint, movie);\r\n}\r\n\r\nexport function deleteMovie(movieId) {\r\n  return http.delete(movieUrl(movieId));\r\n}\r\n","import http from \"./httpService\";\r\n\r\nexport function getGenres() {\r\n  return http.get(\"/genres\");\r\n}\r\n","import React from \"react\";\r\n\r\nconst Like = ({ liked, onClick }) => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!liked) classes += \"-o\";\r\n\r\n  return (\r\n    <i\r\n      onClick={onClick}\r\n      className={classes}\r\n      aria-hidden=\"true\"\r\n      style={{ cursor: \"pointer\" }}\r\n    ></i>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\n\r\n//column: array\r\n//sortColumn: object\r\n//onSort: function\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path)\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map(column => (\r\n            <th\r\n              className=\"clickable\"\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./tableHeader\";\r\nimport TableBody from \"./tableBody\";\r\n\r\nconst Table = ({ columns, sortColumn, onSort, data }) => {\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\r\n      <TableBody columns={columns} data={data} />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import http from \"./httpService\";\r\nimport jwtDecode from \"jwt-decode\";\r\nconst apiEndPoint = \"/auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndPoint, { email, password });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\n\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\n\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\n\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Like from \"./common/like\";\r\nimport Table from \"./common/table\";\r\nimport auth from \"../services/authService\";\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: movie => <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: movie => (\r\n        <Like onClick={() => this.props.onLike(movie)} liked={movie.liked} />\r\n      )\r\n    }\r\n  ];\r\n\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: movie => (\r\n      <button\r\n        onClick={() => this.props.onDelete(movie)}\r\n        className=\"btn btn-sm btn-danger\"\r\n      >\r\n        Delete\r\n      </button>\r\n    )\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    if (user && user.isAdmin) {\r\n      this.columns.push(this.deleteColumn);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn } = this.props;\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        data={movies}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n  // console.log(currentPage);\r\n  const pagesCount = Math.ceil(itemsCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={\r\n              page === currentPage ? \"page-item active text-white\" : \"page-item\"\r\n            }\r\n          >\r\n            <div className=\"page-link\" onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  itemsCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst ListGroup = ({\r\n  items,\r\n  textProperty,\r\n  valueProperty,\r\n  selectedItem,\r\n  onItemSelect\r\n}) => {\r\n  return (\r\n    <ul className=\"list-group\">\r\n      {items.map(item => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          onClick={() => onItemSelect(item)}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nListGroup.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\"\r\n};\r\n\r\nexport default ListGroup;\r\n","import React from \"react\";\r\n\r\nconst SearchBox = ({ value, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"query\"\r\n      className=\"form-control my-3\"\r\n      placeholder=\"Search...\"\r\n      value={value}\r\n      onChange={e => onChange(e.currentTarget.value)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport { getMovies, deleteMovie } from \"./../services/movieService\";\r\nimport { getGenres } from \"./../services/genreService\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport Pagination from \"./common/pagination\";\r\nimport { paginate } from \"./../utils/paginate\";\r\nimport ListGroup from \"./common/listGroup\";\r\nimport _ from \"lodash\";\r\nimport SearchBox from \"./common/searchBox\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    generes: [],\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" }\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const generes = [{ _id: \"\", name: \"All Genres\" }, ...data];\r\n    const { data: movies } = await getMovies();\r\n    this.setState({ movies, generes });\r\n  }\r\n\r\n  handleDelete = async movie => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter(m => m._id !== movie._id);\r\n    this.setState({ movies });\r\n    try {\r\n      await deleteMovie(movie._id);\r\n      // toast.success(\"Movie Deleted\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) console.log(\"x\");\r\n      toast.error(\"This movie is already deleted\");\r\n\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n  handleLike = movie => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n    this.setState({ movies });\r\n  };\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  handleGeneresSelect = genre => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n  handleSearch = query => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n  handleSort = sortColumn => {\r\n    this.setState({ sortColumn });\r\n  };\r\n  getPageData = () => {\r\n    const {\r\n      pageSize,\r\n      currentPage,\r\n      movies: allMovies,\r\n      selectedGenre,\r\n      searchQuery,\r\n      sortColumn\r\n    } = this.state;\r\n\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter(m =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter(m => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const { pageSize, currentPage, sortColumn, searchQuery } = this.state;\r\n    const { user } = this.props;\r\n\r\n    const { totalCount, data } = this.getPageData();\r\n\r\n    return (\r\n      <div className=\"m-5 row\">\r\n        <div className=\"col-3\">\r\n          <ListGroup\r\n            items={this.state.generes}\r\n            selectedItem={this.state.selectedGenre}\r\n            onItemSelect={this.handleGeneresSelect}\r\n          ></ListGroup>\r\n        </div>\r\n\r\n        <div className=\"col\">\r\n          <div className=\"col\">\r\n            {user && (\r\n              <Link\r\n                className=\"btn btn-primary\"\r\n                to=\"/movies/new\"\r\n                style={{ marginBottom: \"20px\" }}\r\n              >\r\n                New Movie\r\n              </Link>\r\n            )}\r\n          </div>\r\n          <p>Showing {totalCount} movies in database</p>\r\n          <SearchBox value={searchQuery} onChange={this.handleSearch} />\r\n          <MoviesTable\r\n            movies={data}\r\n            sortColumn={sortColumn}\r\n            onLike={this.handleLike}\r\n            onDelete={this.handleDelete}\r\n            onSort={this.handleSort}\r\n          ></MoviesTable>\r\n          <Pagination\r\n            itemsCount={totalCount}\r\n            pageSize={pageSize}\r\n            onPageChange={this.handlePageChange}\r\n            currentPage={currentPage}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","import React from \"react\";\r\n\r\nconst Customers = () => {\r\n  return <h1>Customers</h1>;\r\n};\r\n\r\nexport default Customers;\r\n","import React from \"react\";\r\nconst NotFound = () => {\r\n  return <h1>NotFound</h1>;\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\n\r\nconst Rentals = () => {\r\n  return <h1>Rentals</h1>;\r\n};\r\n\r\nexport default Rentals;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n  render() {\r\n    const { user } = this.props;\r\n    return (\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <Link className=\"navbar-brand\" to=\"/\">\r\n          Vidly\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#navbarNav\"\r\n          aria-controls=\"navbarNav\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav\">\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/movies\">\r\n                Movies\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/customers\">\r\n                Customers\r\n              </NavLink>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <NavLink className=\"nav-link\" to=\"/rentals\">\r\n                Rentals\r\n              </NavLink>\r\n            </li>\r\n            {!user && (\r\n              <React.Fragment>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/login\">\r\n                    Login\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/register\">\r\n                    Register\r\n                  </NavLink>\r\n                </li>{\" \"}\r\n              </React.Fragment>\r\n            )}\r\n            {user && (\r\n              <React.Fragment>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/profile\">\r\n                    {user.name}\r\n                  </NavLink>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <NavLink className=\"nav-link\" to=\"/Logout\">\r\n                    Logout\r\n                  </NavLink>\r\n                </li>\r\n              </React.Fragment>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst Input = ({ name, label, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input {...rest} name={name} id={name} className=\"form-control\" />\r\n      {error && <div className=\"alert alert-danger\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React from \"react\";\r\n\r\nconst Select = ({ name, label, options, error, ...rest }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <select name={name} id={name} {...rest} className=\"form-control\">\r\n        <option value=\"\" />\r\n        {options.map(option => (\r\n          <option key={option._id} value={option._id}>\r\n            {option.name}\r\n          </option>\r\n        ))}\r\n        {error && <div className=\"alert alert-danger\">{error}</div>}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import React, { Component } from \"react\";\r\nimport Joi from \"joi-browser\";\r\n\r\nimport Input from \"./input\";\r\nimport Select from \"./select\";\r\n\r\nclass Form extends Component {\r\n  state = { data: {}, errors: {} };\r\n\r\n  validate = () => {\r\n    const options = { abortEarly: false };\r\n    const { error } = Joi.validate(this.state.data, this.schema, options);\r\n    if (!error) return null;\r\n    const errors = {};\r\n    for (let item of error.details) errors[item.path[0]] = item.message;\r\n    return errors;\r\n  };\r\n\r\n  validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value };\r\n    const schema = { [name]: this.schema[name] };\r\n    const { error } = Joi.validate(obj, schema);\r\n    return error ? error.details[0].message : null;\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n    this.doSubmit();\r\n  };\r\n\r\n  handleChange = ({ currentTarget: input }) => {\r\n    const errors = { ...this.state.errors };\r\n    const errorMessage = this.validateProperty(input);\r\n    if (errorMessage) errors[input.name] = errorMessage;\r\n    else delete errors[input.name];\r\n    const data = { ...this.state.data };\r\n    data[input.name] = input.value;\r\n    this.setState({ data, errors });\r\n  };\r\n\r\n  renderButton = label => {\r\n    return (\r\n      <button disabled={this.validate()} className=\"btn btn-primary\">\r\n        {label}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  renderInput = (name, label, type = \"text\") => {\r\n    const { data, errors } = this.state;\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n\r\n  renderSelect = (name, label, options) => {\r\n    const { data, errors } = this.state;\r\n\r\n    return (\r\n      <Select\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        options={options}\r\n        onChange={this.handleChange}\r\n        error={errors[name]}\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport { getGenres } from \"./../services/genreService\";\r\nimport { saveMovie, getMovie } from \"./../services/movieService\";\r\n\r\nclass MovieForm extends Form {\r\n  state = {\r\n    data: {\r\n      title: \"\",\r\n      genreId: \"\",\r\n      numberInStock: \"\",\r\n      dailyRentalRate: \"\"\r\n    },\r\n    genres: [],\r\n    errors: {}\r\n  };\r\n  schema = {\r\n    _id: Joi.string(),\r\n    title: Joi.string()\r\n      .required()\r\n      .label(\"Title\"),\r\n    genreId: Joi.string()\r\n      .required()\r\n      .label(\"Genre\"),\r\n    numberInStock: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Number in Stock\"),\r\n    dailyRentalRate: Joi.number()\r\n      .required()\r\n      .min(0)\r\n      .max(100)\r\n      .label(\"Daily Rental Rate\")\r\n  };\r\n  async populateGenres() {\r\n    const { data: genres } = await getGenres();\r\n    this.setState({ genres });\r\n  }\r\n\r\n  async populateMovie() {\r\n    try {\r\n      const movieId = this.props.match.params.id;\r\n      if (movieId === \"new\") return;\r\n      const { data: movie } = await getMovie(movieId);\r\n\r\n      this.setState({ data: this.mapToViewModel(movie) });\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404)\r\n        this.props.history.replace(\"/not-found\");\r\n    }\r\n  }\r\n  async componentDidMount() {\r\n    await this.populateGenres();\r\n    await this.populateMovie();\r\n  }\r\n\r\n  mapToViewModel(movie) {\r\n    return {\r\n      _id: movie._id,\r\n      title: movie.title,\r\n      genreId: movie.genre._id,\r\n      numberInStock: movie.numberInStock,\r\n      dailyRentalRate: movie.dailyRentalRate\r\n    };\r\n  }\r\n\r\n  doSubmit = async () => {\r\n    await saveMovie(this.state.data);\r\n    this.props.history.push(\"/movies\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Movie Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"title\", \"Title\")}\r\n          {this.renderSelect(\"genreId\", \"Genre\", this.state.genres)}\r\n          {this.renderInput(\"numberInStock\", \"Number in Stock\", \"number\")}\r\n          {this.renderInput(\"dailyRentalRate\", \"Rate\")}\r\n          {this.renderButton(\"Save\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieForm;\r\n","import React from \"react\";\r\nimport Joi from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\nimport auth from \"../services/authService\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass LoginForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .label(\"Password\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const { username, password } = this.state.data;\r\n      await auth.login(username, password);\r\n\r\n      const { state } = this.props.location;\r\n      window.location = state ? state.from.pathname : \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.data === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\r\n    return (\r\n      <div>\r\n        <h1>Login</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderButton(\"Login\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"/users\";\r\n\r\nexport function register(user) {\r\n  return http.post(apiEndPoint, {\r\n    email: user.username,\r\n    password: user.password,\r\n    name: user.name\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport Form from \"./common/form\";\r\nimport Joi from \"joi-browser\";\r\nimport { register } from \"../services/userService\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {}\r\n  };\r\n\r\n  schema = {\r\n    username: Joi.string()\r\n      .email()\r\n      .required()\r\n      .label(\"Username\"),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(5)\r\n      .label(\"Password\"),\r\n    name: Joi.string()\r\n      .required()\r\n      .label(\"Name\")\r\n  };\r\n\r\n  doSubmit = async () => {\r\n    try {\r\n      const res = await register(this.state.data);\r\n      auth.loginWithJwt(res.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (e) {\r\n      console.error(e);\r\n      if (e.response && e.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = e.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Register Form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {this.renderInput(\"username\", \"Username\", \"email\")}\r\n          {this.renderInput(\"password\", \"Password\", \"password\")}\r\n          {this.renderInput(\"name\", \"Name\")}\r\n          {this.renderButton(\"Register\")}\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport auth from \"../../services/authService\";\r\n\r\nconst ProtectedRoutes = ({ component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!auth.getCurrentUser())\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/login\", state: { from: props.location } }}\r\n            />\r\n          );\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoutes;\r\n","import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport NotFound from \"./components/notFound\";\nimport Rentals from \"./components/rentals\";\nimport Navbar from \"./components/navBar\";\nimport MovieForm from \"./components/movieForm\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport ProtectedRoutes from \"./components/common/protectedRoutes\";\n\nimport auth from \"./services/authService\";\n\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport Logout from \"./components/logout\";\n\nclass App extends Component {\n  state = {};\n\n  componentDidMount() {\n    const user = auth.getCurrentUser();\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <ToastContainer />\n        <Navbar user={user} />\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout} />\n            <ProtectedRoutes path=\"/movies/:id\" component={MovieForm} />\n            <Route\n              path=\"/movies\"\n              render={props => <Movies {...props} user={this.state.user} />}\n            />\n            <Route path=\"/customers\" component={Customers} />\n            <Route path=\"/rentals\" component={Rentals} />\n            <Route path=\"/not-found\" component={NotFound} />\n            <Route path=\"/register\" component={RegisterForm} />\n            <Redirect from=\"/\" exact to=\"/movies\" />\n            <Redirect to=\"/not-found\" />\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport logger from \"./services/logService\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nconsole.log(process.env.REACT_APP_NAME);\nlogger.init();\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}